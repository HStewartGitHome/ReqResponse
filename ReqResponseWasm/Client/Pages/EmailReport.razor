@page "/emailreport"

@inject HttpClient Http
@inject NavigationManager navigationManager

@if (string.IsNullOrWhiteSpace(errorString) == false)
{
<div class="h2">@errorString</div> }
else if (report is null)
{
<div class="h4">Loading...</div> }
else
{

<h3>Email Report</h3>
                
<h2>Error Count             = @report.ErrorCount.ToString()</h2>
                                
<h2>Error Set Count         = @report.ErrorSet.ToString()</h2>
                                                
<h2>Current Last Error Time = @report.CurrentLastErrorDateTime.ToString()</h2>
                                                                
<h2>Last Error Time         = @report.LastErrorDateTime.ToString()</h2>
                                                                                
<h2>Created Time            = @report.Created.ToString()</h2>

                                                                                                
@if (report.ErrorCount > 0)
                                                                                                {
                                                                                
    <button class="btn btn-primary" type="button" @onclick="OnReport">@report.Message</button>}
}

@code { TestErrorReport report = null;
    string errorString = "";
    TestViewModel model = null;

    protected override async Task OnInitializedAsync()
    {
        await Task.Yield();
        string str = "ErrorReport?param=load";
        model = await Http.GetFromJsonAsync<TestViewModel>(str);
        report = model.Report;
        errorString = model.ErrorString;
    }

    private async Task OnReport()
    {
        string str = "ErrorReport?param=email";
        model = await Http.GetFromJsonAsync<TestViewModel>(str);
        errorString = model.ErrorString;
        navigationManager.NavigateTo("/");
    } }